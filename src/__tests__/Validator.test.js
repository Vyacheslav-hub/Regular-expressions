import Validator from '../Validator';

test.each([
  ['validName', true],
  ['valid_name-123', false], // заканчивается цифрами
  ['123invalid', false], // начинается с цифры
  ['invalid_', false], // заканчивается на _
  ['name1234', false], // более 3 цифр подряд
  ['name-_-name', true],
  ['na1111me', false], // более 3 цифр подряд
])('validateUsername(%s) should return %s', (username, expected) => {
  expect(Validator.validateUsername(username)).toBe(expected);
});

// 1. ^ – начало строки
// Регулярное выражение требует, чтобы совпадение начиналось с первого символа строки.

// 2. [a-zA-Z] – первый символ должен быть буквой
// Этот фрагмент указывает, что первая буква должна быть латинской (заглавной или строчной).

// 3. (?!.*\d{4,}) – отрицательный просмотр вперёд (negative lookahead)
// Запрещает наличие 4 и более подряд идущих цифр где-либо в строке.
//  Разбираем по кускам:
//  (?!) – отрицательный просмотр вперёд, то есть строка будет не соответствовать выражению, если в ней встретится запрещённый шаблон.
//  .* – любое количество любых символов.
//  \d{4,} – последовательность из 4 и более цифр.

// 4. [a-zA-Z0-9-_]* – любые допустимые символы после первой буквы
// Здесь можно использовать буквы (a-zA-Z), цифры (0-9), а также - и _.

// 5. [a-zA-Z0-9]$ – последний символ должен быть буквой или цифрой
// Этот фрагмент запрещает завершать строку символами - или _.

// 6. $ – конец строки
// Гарантирует, что вся строка должна полностью соответствовать шаблону.
